// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using jwt_authentication_boilerplate.Data;

namespace jwt_authentication_boilerplate.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20220603095758_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("jwt_authentication_boilerplate.Data.Entities.ClaimData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Type");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ClaimData");

                    b.HasData(
                        new
                        {
                            Id = 7,
                            Type = "name",
                            UserId = 3,
                            Value = "admin"
                        },
                        new
                        {
                            Id = 8,
                            Type = "role",
                            UserId = 3,
                            Value = "Admin"
                        },
                        new
                        {
                            Id = 9,
                            Type = "userId",
                            UserId = 3,
                            Value = "3"
                        },
                        new
                        {
                            Id = 1,
                            Type = "name",
                            UserId = 2,
                            Value = "Shlomi"
                        },
                        new
                        {
                            Id = 2,
                            Type = "role",
                            UserId = 2,
                            Value = "Student"
                        },
                        new
                        {
                            Id = 3,
                            Type = "userId",
                            UserId = 2,
                            Value = "2"
                        });
                });

            modelBuilder.Entity("jwt_authentication_boilerplate.Data.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Student"
                        });
                });

            modelBuilder.Entity("jwt_authentication_boilerplate.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("jwt_authentication_boilerplate.Data.Entities.Admin", b =>
                {
                    b.HasBaseType("jwt_authentication_boilerplate.Data.Entities.User");

                    b.HasDiscriminator().HasValue("Admin");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            FirstName = "admin",
                            LastName = "sdsd",
                            Mail = "csdcdc",
                            Password = "123456",
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("jwt_authentication_boilerplate.Data.Entities.Student", b =>
                {
                    b.HasBaseType("jwt_authentication_boilerplate.Data.Entities.User");

                    b.Property<string>("StudyStartYear")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasDiscriminator().HasValue("Student");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            FirstName = "Shlomi",
                            LastName = "Atar",
                            Mail = "shlomi@gmail",
                            Password = "1234",
                            RoleId = 3,
                            StudyStartYear = "2022"
                        });
                });

            modelBuilder.Entity("jwt_authentication_boilerplate.Data.Entities.ClaimData", b =>
                {
                    b.HasOne("jwt_authentication_boilerplate.Data.Entities.User", "User")
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("jwt_authentication_boilerplate.Data.Entities.User", b =>
                {
                    b.HasOne("jwt_authentication_boilerplate.Data.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("jwt_authentication_boilerplate.Data.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("jwt_authentication_boilerplate.Data.Entities.User", b =>
                {
                    b.Navigation("Claims");
                });
#pragma warning restore 612, 618
        }
    }
}
